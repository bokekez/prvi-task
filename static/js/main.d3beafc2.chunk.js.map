{"version":3,"sources":["Components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","useState","item","users","setUsers","useEffect","fetch","then","response","json","tempItems","results","map","user","picture","name","title","first","last","comp","style","width","height","background","alignContent","textAlign","marginTop","marginLeft","borderRadius","src","large","fontSize","console","log","display","flexDirection","flexWrap","App","justifyContent","alignItems","borderStyle","justifyItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAoDeA,EAjDF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACRC,EADQ,aAEWD,mBAAS,KAFpB,mBAERE,EAFQ,KAEDC,EAFC,KAIfC,qBAAU,WACNC,MAAM,yCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACF,IAAMC,EAAYD,EAAKE,QAAQC,KAAI,SAAAC,GAAI,MAAK,CACxC,QAAWA,EAAKC,QAChB,MAASD,EAAKE,KAAKC,MACnB,MAASH,EAAKE,KAAKE,MACnB,KAAQJ,EAAKE,KAAKG,SAEtBd,EAAS,GAAD,mBAAKD,GAAL,YAAeO,UAE5B,IAEH,IAAMA,EAAYP,EAAMS,KAAI,SAAAO,GACxB,OACA,sBAAKC,MAAO,CACRC,MAAO,QACPC,OAAQ,QACRC,WAAY,UACZC,aAAc,SACdC,UAAW,SACXC,UAAW,OACXC,WAAY,OACZC,aAAc,QARlB,UAUI,qBAAKR,MAAO,CAACM,UAAW,SAAUE,aAAc,QAAQC,IAAKV,EAAKL,QAAQgB,QAC1E,oBAAIV,MAAO,CAACE,OAAQ,SAAUS,SAAU,UAAxC,SAAoDZ,EAAKH,QACzD,oBAAII,MAAO,CAACE,OAAQ,SAAUS,SAAU,UAAxC,SAAoDZ,EAAKF,QACzD,oBAAIG,MAAO,CAACE,OAAQ,SAAUS,SAAU,UAAxC,SAAoDZ,EAAKD,aAQjE,OAHAc,QAAQC,IAAI9B,GACZ6B,QAAQC,IAAI/B,GAGR,qBAAKkB,MAAO,CAACc,QAAS,OAAQC,cAAe,MAAOC,SAAU,QAA9D,SACK1B,KCjCE2B,MATf,WACE,OACE,sBAAKjB,MAAO,CAACc,QAAS,OAAQC,cAAe,SAAUG,eAAgB,SAAUd,aAAc,SAAUe,WAAY,UAArH,UACE,oBAAInB,MAAO,CAACoB,YAAa,SAAUC,aAAc,UAAjD,uBACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d3beafc2.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Component from './Component';\r\n\r\nconst Card = () => {\r\n    const [item, setItem] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`https://randomuser.me/api/?results=15`)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const tempItems = json.results.map(user => ({\r\n                'picture': user.picture,\r\n                'title': user.name.title,\r\n                'first': user.name.first,\r\n                'last': user.name.last,           \r\n            }))\r\n            setUsers([...users, ...tempItems])\r\n        })\r\n    }, [])\r\n\r\n    const tempItems = users.map(comp => {\r\n        return (\r\n        <div style={{\r\n            width: '15rem', \r\n            height: '15rem', \r\n            background: '#f0f0f5',\r\n            alignContent: 'center', \r\n            textAlign: 'center', \r\n            marginTop: '1rem',\r\n            marginLeft: '1rem',\r\n            borderRadius: '20px'\r\n            }}>\r\n            <img style={{marginTop: '0.3rem', borderRadius: '40px'}}src={comp.picture.large}/>\r\n            <h3 style={{height: '0.5rem', fontSize: '0.7rem'}}>{comp.title}</h3>\r\n            <h2 style={{height: '0.5rem', fontSize: '1.2rem'}}>{comp.first}</h2>\r\n            <h2 style={{height: '0.5rem', fontSize: '1.2rem'}}>{comp.last}</h2>\r\n        </div>\r\n        )\r\n    })\r\n\r\n    console.log(users)\r\n    console.log(item)\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\r\n            {tempItems}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;","\nimport './App.css';\nimport Card from './Components/Card';\n\nfunction App() {\n  return (\n    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignContent: 'center', alignItems: 'center'}}>\n      <h1 style={{borderStyle: 'double', justifyItems: 'center'}}>Dept logo</h1>\n      <Card/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}